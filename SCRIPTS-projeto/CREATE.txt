TRUNCATE TABLE
    estatisticas,
    partidas,
    jogadores,
    clubes,
    tecnicos
RESTART IDENTITY CASCADE;

DROP TABLE IF EXISTS
    estatisticas,
    partidas,
    jogadores,
    clubes,
    tecnicos
CASCADE;

-- Tabela de técnicos
CREATE TABLE tecnicos (
    id SERIAL PRIMARY KEY,
    nome VARCHAR(255) NOT NULL,
    ativo BOOLEAN DEFAULT TRUE
);

-- Tabela de clubes
CREATE TABLE clubes (
    id SERIAL PRIMARY KEY,
    nome VARCHAR(255) NOT NULL,
    sigla VARCHAR(5),
    cidade VARCHAR(255),
    estado VARCHAR(255),
    ativo BOOLEAN DEFAULT TRUE,
    tecnico_id INTEGER UNIQUE,
    CONSTRAINT fk_tecnico FOREIGN KEY (tecnico_id) REFERENCES tecnicos(id)
);

-- Tabela de jogadores
CREATE TABLE jogadores (
    id SERIAL PRIMARY KEY,
    nome VARCHAR(255) NOT NULL,
    posicao VARCHAR(50),
    altura INTEGER,
    peso REAL,
    data_nascimento DATE,
    clube_id INTEGER,
    ativo BOOLEAN DEFAULT TRUE,
    CONSTRAINT fk_clube FOREIGN KEY (clube_id) REFERENCES clubes(id)
);

-- Tabela de partidas
CREATE TABLE partidas (
    id SERIAL PRIMARY KEY,
    local VARCHAR(255),
    data DATE,
	ativo BOOLEAN DEFAULT TRUE,
    clube_mandante_id INTEGER NOT NULL,
    clube_visitante_id INTEGER NOT NULL,
    CONSTRAINT fk_clube_mandante FOREIGN KEY (clube_mandante_id) REFERENCES clubes(id),
    CONSTRAINT fk_clube_visitante FOREIGN KEY (clube_visitante_id) REFERENCES clubes(id)
);

-- Tabela de estatísticas
CREATE TABLE estatisticas (
    id SERIAL PRIMARY KEY,
    jogador_id INTEGER NOT NULL,
    partida_id INTEGER NOT NULL,
    total_pontos INTEGER,
    total_faltas INTEGER,
    rebotes_ofensivos INTEGER,
    rebotes_defensivos INTEGER,
    roubos_de_bola INTEGER,
    turnovers INTEGER,
    CONSTRAINT fk_est_jogador FOREIGN KEY (jogador_id) REFERENCES jogadores(id),
    CONSTRAINT fk_est_partida FOREIGN KEY (partida_id) REFERENCES partidas(id)
);
